@page "/editcategory/{categoryId}"

@inject NavigationManager NavigationManager
@inject UseCases.IAddCategoryUseCase AddCategoryUseCase
@inject UseCases.IGetCategoryByldUseCase GetCategoryByIdUseCase
@inject UseCases.IEditCategoryUseCase EditCategoryUseCase

<h3>Edit Category</h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="name">Description</label>
            <InputText id="name" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}



@code {
    [Parameter]
    public string CategoryId { get; set; }


    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.CategoryId, out int iCategoryId))
        {
            this.category = GetCategoryByIdUseCase.Execute(iCategoryId);
        }
    }

    private void OnValidSumit()
    {
        EditCategoryUseCase.Execute(this.category);
        NavigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }


}

