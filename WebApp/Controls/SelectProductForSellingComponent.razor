@inject UseCases.IViewCategories ViewCategories
@inject UseCases.IViewProductsByCategoryId ViewProductsByCategoryId

<div class="form-group">
    <label for="category">Category</label>
    <select id="category" @bind="SelectedCategoryId" class="form-control">
        <option selected></option>
        @foreach (var cat in categories)
            {
            <option value="@cat.CategoryId">@cat.Name</option>
            }
    </select>
</div>
@if (productsInCategory != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity Left</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prod in productsInCategory)
                {
                <tr @onclick="@(() => OnSelectProduct(prod))"
                    style="@(prod.ProductId == selectedProductId?"background-color:green; cursor:pointer;":"cursor:pointer")">
                    <td>
                        @prod.Name
                    </td>
                    <td>
                        @prod.Quantity
                    </td>
                    <td>
                        @prod.Price
                    </td>
                
                </tr>
                }
        </tbody>
    </table>
}


@code {

    private IEnumerable<Product> productsInCategory;
    private int selectedProductId;

    [Parameter]
    public EventCallback<Product> OnProductSelected { get; set; }



    private int selectedCategoryId;
    private int SelectedCategoryId
    {
        get
        {
            return selectedCategoryId;
        }
        set
        {
            selectedCategoryId = value;
            productsInCategory = ViewProductsByCategoryId.Execute(value);
            OnSelectProduct(null);
            StateHasChanged();
        }
    }

    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategories.Execute();
    }

    private void OnSelectProduct(Product product)
    {
        OnProductSelected.InvokeAsync(product);
        if (product != null) selectedProductId = product.ProductId;

    }




    }


